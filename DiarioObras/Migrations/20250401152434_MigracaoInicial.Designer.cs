// <auto-generated />
using System;
using DiarioObras.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiarioObras.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250401152434_MigracaoInicial")]
    partial class MigracaoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DiarioObras.Models.FotoRegistro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CaminhoArquivo")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Localizacao")
                        .HasColumnType("longtext");

                    b.Property<int>("RegistroDiarioId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistroDiarioId");

                    b.ToTable("FotoRegistros");
                });

            modelBuilder.Entity("DiarioObras.Models.Obra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cliente")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataTerminoPrevista")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext");

                    b.Property<string>("EngenheiroResponsavel")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroContrato")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Obras");
                });

            modelBuilder.Entity("DiarioObras.Models.RegistroDiario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aprovado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AssinaturaResponsavel")
                        .HasColumnType("longtext");

                    b.Property<int>("CondicoesClimaticas")
                        .HasColumnType("int");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataAssinatura")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ObraId")
                        .HasColumnType("int");

                    b.Property<string>("Resumo")
                        .HasColumnType("longtext");

                    b.Property<int>("TotalFuncionarios")
                        .HasColumnType("int");

                    b.Property<int>("TotalTerceirizados")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObraId");

                    b.ToTable("RegistroDiarios");
                });

            modelBuilder.Entity("DiarioObras.Models.FotoRegistro", b =>
                {
                    b.HasOne("DiarioObras.Models.RegistroDiario", "RegistroDiario")
                        .WithMany("Fotos")
                        .HasForeignKey("RegistroDiarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegistroDiario");
                });

            modelBuilder.Entity("DiarioObras.Models.RegistroDiario", b =>
                {
                    b.HasOne("DiarioObras.Models.Obra", "Obra")
                        .WithMany("RegistrosDiarios")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Obra");
                });

            modelBuilder.Entity("DiarioObras.Models.Obra", b =>
                {
                    b.Navigation("RegistrosDiarios");
                });

            modelBuilder.Entity("DiarioObras.Models.RegistroDiario", b =>
                {
                    b.Navigation("Fotos");
                });
#pragma warning restore 612, 618
        }
    }
}
